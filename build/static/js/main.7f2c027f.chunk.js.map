{"version":3,"sources":["personServices/persons.js","App.js","index.js"],"names":["baseUrl","dummy","name","number","id","console","log","axios","get","then","response","data","concat","personObject","post","delete","App","useState","persons","setPersons","errorMessage","seterrorMessage","useEffect","personServices","newPerson","setnewPerson","onSubmit","event","preventDefault","length","newPersonObject","Math","floor","random","newperson","result","forEach","person","toLowerCase","duplicate","setTimeout","alert","document","getElementById","focus","value","onChange","target","dummyObject","type","class","map","onClick","personData","find","window","confirm","filter","catch","error","deleteperson","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f2c027f.chunk.js","sourcesContent":["import axios from'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n    const dummy = {\n        name: \"anything\",\n        number:\"92383754\",\n        id:45\n    }\n    console.log('Just sending the get request to server')\n    const req = axios.get(baseUrl)\n    return(req.then(response => response.data.concat(dummy)))\n} \n\nconst createPerson = (personObject) => {\n    console.log('just sending the post request to server')\n    return(\n        axios\n        .post(baseUrl, personObject)\n    )\n}\n\nconst deletePerson = (id) => {\n    console.log('just sending the delete request to server')\n    return(\n        axios.delete(`${baseUrl}/${id}`)\n    )\n}\n\nexport default {\n    getAll,\n    createPerson,\n    deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personServices from './personServices/persons'\n\nconst duplicate = (newperson, persons) => {\n\tvar result = false\n\tpersons.forEach(person => {\n\t\tif(newperson.name.toLowerCase() === person.name.toLowerCase() || newperson.number === person.number) {\n\t\t\tresult = true\n\t\t}\n\t});\t\n\treturn result\n} \n\nconst App = () => {\n\t\n\tconst [ persons, setPersons] = useState([])\n\tconst [errorMessage, seterrorMessage] = useState('')\n\n\tuseEffect(() => {\n\t\tconsole.log('about to make fetch all requests')\n\t\tpersonServices\n\t\t.getAll()\n\t\t.then((data) => {\n\t\t\tsetPersons(persons.concat(data))\n\t\t})\n\t},[])\n\t\n\tconst [ newPerson, setnewPerson ] = useState({\n\t\tid:1,\n\t\tname:\"\",\n\t\tnumber: \"\",\n\t})\n\t\n\tconst updatePersons = (event) => {\n\t\tevent.preventDefault()\n\t\tif (newPerson.name.length !== 0 && newPerson.number.length !== 0) {\n\t\t\tconst newPersonObject = {\n\t\t\t\tname: newPerson.name,\n\t\t\t\tnumber: newPerson.number,\n\t\t\t\tid: Math.floor(Math.random() + persons.length + 1),\n\t\t\t}\n\t\t\tif (!duplicate(newPersonObject, persons)) {\n\t\t\t\t//updating in server\n\t\t\t\tpersonServices\n\t\t\t\t.createPerson(newPersonObject)\n\t\t\t\t.then(response =>  {\n\t\t\t\t\tsetPersons(persons.concat(response.data))\n\t\t\t\t\tseterrorMessage(`${newPersonObject.name} added`)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tseterrorMessage('')\n\t\t\t\t\t}, 2000);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{\n\t\t\t\tseterrorMessage('Person with same name or number exists!')\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tseterrorMessage('')\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t\tsetnewPerson({\n\t\t\t\t...newPerson,\n\t\t\t\tname:\"\",\n\t\t\t\tnumber:\"\"\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\talert('Number or name field cannot be empty!')\n\t\t}\n\n\t\tdocument.getElementById(\"first\").focus()\n\t}\n\t\n\tconst handleNameField = (event) => {\n\t\tconsole.log(event.target.value)\n\t\tconst dummyObject = {\n\t\t\t...newPerson,\n\t\t\tname: event.target.value\n\t\t}\n\t\tsetnewPerson(dummyObject)\n\t}\n\n\tconst handleNumberField = (event) => {\n\t\tconsole.log(event.target.value);\n\t\tconst dummyObject = {\n\t\t\t...newPerson,\n\t\t\tnumber: event.target.value\n\t\t}\n\t\tsetnewPerson(dummyObject)\n\t}\n\n\tconst deleteperson = (id) => {\n\t\tconst personData = persons.find(person => person.id === id)\n\t\tif(!(window.confirm(`are you sure want to delete ${personData.name}??`))){\n\t\t\treturn\n\t\t}\n\t\tconsole.log(id)\n\t\tpersonServices\n\t\t.deletePerson(id)\n\t\t.then(setPersons(persons.filter(person => person.id !== id)))\n\t\t.catch(error => {\n\t\t\tseterrorMessage(`person not found`)\n\t\t})\n\t\tdocument.getElementById(\"first\").focus()\n\t}\n\n\tconst rows = () => {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{persons.map(person => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{person.name} \n\t\t\t\t\t\t{\" \t\t\"} \n\t\t\t\t\t\t{person.number}\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t<button onClick={() => deleteperson(person.id)}> \n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button> \n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n\tconsole.log(persons)\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <form onSubmit={updatePersons}>\n            Name: <input id=\"first\" value ={newPerson.name} onChange = {handleNameField}/>\n\t\t\tNumber: <input value ={newPerson.number} onChange = {handleNumberField}/>\n            <button type=\"submit\">add</button>\n        </form>\n\t\t<div class=\"error\">\n\t\t\t{errorMessage}\n\t\t</div>\n        <h2>Numbers</h2>\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{rows()}\n\t\t\t</ul>\n\t\t</div>\n      </div>\n    )\n  }\n  \n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}